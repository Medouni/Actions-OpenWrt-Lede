#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: lede-x86-64

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  #schedule:
    #- cron: 0 1 * * 4

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  #FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: build/X86/x86-64.config
  DIY_P1_SH: build/X86/diy-part1.sh
  DIY_P2_SH: build/X86/diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_CONFIG: true
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: false
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  SERVERCHAN_SCKEY: false
  BOT: true
  RECENT_LASTEST: 3
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout 检查项目分支
      uses: actions/checkout@main

    - name: Initialization environment 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
        echo "NETIP=package/base-files/files/etc/networkip" >> $GITHUB_ENV
        echo "ZZZ=package/lean/default-settings/files/zzz-default-settings" >> $GITHUB_ENV
                
    - name: Clone source code 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
           
    - name: Load custom feeds 加载自定义设置
      run: |
        #[ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: Update feeds 下载插件
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds 读取插件
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration 更改设置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        echo "FILE_UPLOAD_TIME=$(date "+%Y%m%d-%H%M")"  >> $GITHUB_ENV
        echo "ZZZ=package/lean/default-settings/files/zzz-default-settings" >> $GITHUB_ENV
        echo "NETIP=package/base-files/files/etc/networkip" >> $GITHUB_ENV
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: SSH connection to Actions SSH链接管理
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package 下载安装包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo "::set-output name=status::success"
    
    - name: Upload .config 上传.config到github
      uses: actions/upload-artifact@main
      if: steps.package.outputs.status == 'success' && env.UPLOAD_CONFIG == 'true' && !cancelled()      
      with:
        name: x86-64.confg
        path: .config
        retention-days: 7
        if-no-files-found: ignore
        
    - name: Compile the firmware 开始编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV

    - name: Check space usage 查看磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory 上传bin压缩目录
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin/packages/x86_64
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Organize files 整理编译好的固件
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages && mkdir packages
        mv -f config.buildinfo x86-64-diff.config
        #find -name "*esxi-flat.vmdk*" | xargs -i mv -f {} packages
        find -name "*kernel.bin*" | xargs -i mv -f {} packages
        find -name "*rootfs*" | xargs -i mv -f {} packages
        find -name "*.manifest*" | xargs -i mv -f {} packages
        find -name "*vmlinuz*" | xargs -i mv -f {} packages
        #find -name "*esxi.vmdk*" | xargs -i mv -f {} packages
        find -name "*buildinfo*" | xargs -i mv -f {} packages
        find -name "*sha256sums*" | xargs -i mv -f {} packages
        rm -rf packages
        
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        cp $GITHUB_WORKSPACE/openwrt/.config x86-64.config
        echo "FILE_DATE=$(date "+%Y-%m-%d %H:%M")"  >> $GITHUB_ENV
        echo "FILE_TIME=$(date "+%Y年%m月%d日-%H点")" >> $GITHUB_ENV
        echo "tag_name=$(date "+%Y%m%d%H%M")"  >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory 上传固件到github
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()      
      with:
        name: OpenWrt_5.4${{ env.DEVICE_NAME }}${{ env.FILE_UPLOAD_TIME }}
        path: ${{ env.FIRMWARE }}
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware to cowtransfer 上传固件到NN网盘
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
        
    - name: Upload firmware to WeTransfer 上传固件到WT网盘
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
 
 
    - name: Create release 创建release标签
      id: release
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.FILE_DATE }} 「 lede-x86-64 」
        allowUpdates: true
        tag: ${{ env.tag_name }}-x86
        commit: main
        token: ${{ secrets.RELEASES_TOKEN  }}
        body: |
          默认IP：192.168.1.2 默认密码： password
          使用ESXI，附件vmdk格式不兼容，需要转换为兼容的vmdk格式
             1. ssh <用户>@<ESXi主机>，
                 如：<用户>为root，<ESXi主机>的IP地址为192.168.1.3，命令如下ssh root@192.168.1.3；
             2. cd vmfs/volumes/datastore1
             3. ls
                 查找上传至ESXI的镜像openwrt-x86-64-generic-squashfs-combined-efi.vmdk是否存在
             4. 使用vmkfstools将不支持的.vmdk转换为ESXi支持的.vmdk格式，vmkfstools -i <旧的.vmdk> <新的.vmdk>，
                 如：vmkfstools -i  openwrt-x86-64-generic-squashfs-combined-efi.vmdk  openwrt-x86-64-generic-squashfs-combined-efi-esxi.vmdk
             5. 调整vmdk的大小，已避免后期修改虚拟机时保存时"请输入大于原始容量的磁盘大小"出错，
                 执行命令：
                 vmkfstools -X 1.5G openwrt-x86-64-generic-squashfs-combined-efi-esxi.vmdk
                 ( -X 为大写X   1.5G是要修改成为的磁盘大小 openwrt-x86-64-generic-squashfs-combined-efi-esxi.vmdk是需要修改的磁盘文件，大小 为1K的那个。）
             当看到Grow: 100% done.说明成功了
        artifacts:  ${{ env.FIRMWARE }}/*
        
    - name: Delete workflow runs 删除workflow
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 0
        
    - name: Remove old Releases 删除旧的Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}

    - name: Wechat notice 微信通知
      uses: emon100/Action-Serverchan@v2
      if: steps.release.outputs.status == 'success' && env.SERVERCHAN_SCKEY == 'true' && !cancelled()
      with:
        SCKEY: ${{ secrets.SERVERCHAN_SCKEY }}
        text: 恭喜主人「 lede-x86-64 」固件编译成功！
        desp: 我亲爱的主人：您「 Actions-OpenWrt-Lede」仓库编译的${{ env.FILE_DATE }} 「 lede-x86-64 」固件顺利编译完成了！
        
    - name: Bot notice 电报机器人信息通知
      if: steps.release.outputs.status == 'success' && env.BOT == 'true' && !cancelled()
      run: |
        curl -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" -d "text=我亲爱的✨主人✨：您使用「 Actions-OpenWrt-Lede」文件夹编译的${{ env.FILE_DATE }} 「 lede-x86-64 」固件顺利编译完成了！💐链接：https://github.com/roacn/Actions-OpenWrt-Lede/releases" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
      
